# AI Guardian Enhanced v4.0.0 - Environment Configuration Template
# Copy this file to .env and fill in your actual values
# NEVER commit the .env file to version control

# =============================================================================
# DATABASE CONFIGURATION (NeonDB)
# =============================================================================
POSTGRES_URL=postgres://username:password@host/database?sslmode=require
POSTGRES_URL_NON_POOLING=postgres://username:password@host/database?sslmode=require
POSTGRES_USER=your_db_username
POSTGRES_HOST=your-neon-host.neon.tech
POSTGRES_PASSWORD=your_secure_password
POSTGRES_DATABASE=your_database_name
POSTGRES_DB=your_database_name
POSTGRES_URL_NO_SSL=postgres://username:password@host/database

# =============================================================================
# APPLICATION SECURITY
# =============================================================================
# Generate a secure secret key for JWT tokens and session management
# Use: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=CHANGE_ME_GENERATE_SECURE_SECRET_KEY

# JWT Configuration
JWT_SECRET_KEY=CHANGE_ME_GENERATE_JWT_SECRET_KEY
JWT_ACCESS_TOKEN_EXPIRES=3600

# =============================================================================
# DOCKER REGISTRY CONFIGURATION
# =============================================================================
# Docker registry for production images (e.g., your-registry.com, docker.io)
DOCKER_REGISTRY=your-registry.com
IMAGE_TAG=latest

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================
# Grafana admin password
GRAFANA_ADMIN_PASSWORD=CHANGE_ME_GRAFANA_ADMIN_PASSWORD

# =============================================================================
# CLOUD PROVIDER CREDENTIALS (Optional - for cloud security service)
# =============================================================================
# AWS Configuration (if using AWS security scanning)
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_REGION=us-east-1

# Azure Configuration (if using Azure security scanning)
AZURE_CLIENT_ID=your_azure_client_id
AZURE_CLIENT_SECRET=your_azure_client_secret
AZURE_TENANT_ID=your_azure_tenant_id

# GCP Configuration (if using GCP security scanning)
GCP_PROJECT_ID=your_gcp_project_id
GCP_SERVICE_ACCOUNT_KEY_PATH=/path/to/service-account-key.json

# =============================================================================
# EXTERNAL INTEGRATIONS (Optional)
# =============================================================================
# SMTP Configuration for email notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your_email@gmail.com
SMTP_PASSWORD=your_app_specific_password
SMTP_USE_TLS=true

# Slack Integration (for notifications)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# JIRA Integration (for ticket creation)
JIRA_URL=https://your-company.atlassian.net
JIRA_USERNAME=your_jira_username
JIRA_API_TOKEN=your_jira_api_token

# Splunk Integration (for SIEM)
SPLUNK_HOST=your-splunk-host.com
SPLUNK_PORT=8089
SPLUNK_USERNAME=your_splunk_username
SPLUNK_PASSWORD=your_splunk_password

# =============================================================================
# DEVELOPMENT SETTINGS (Only for development environments)
# =============================================================================
# Set to 'development' for dev mode, 'production' for production
ENVIRONMENT=production

# Debug mode (NEVER set to true in production)
DEBUG=false

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO
